DROP TABLE DEPARTMENT;
DROP TABLE AUTHOR;
DROP TABLE BOOK;
DROP TABLE AUTHORSHIP;
DROP TABLE BOOKINSTANCE;
DROP TABLE USER;
DROP TABLE RATING;
DROP TABLE BORROWING;

CREATE TABLE DEPARTMENT
(
  DID NUMBER(4) NOT NULL,
  DNAME VARCHAR2(20),
  DADDRESS VARCHAR2(50)
);

CREATE TABLE AUTHOR
(
  AID NUMBER(6) NOT NULL,
  ANAME VARCHAR2(20)
);

CREATE TABLE BOOK
(
  BID NUMBER(6) NOT NULL,
  BTITLE VARCHAR2(20),
  ISBN VARCHAR2(10) NOT NULL,
  ISBN13 NUMBER(13) NOT NULL,
  BGENRE VARCHAR2(20)
);

CREATE TABLE AUTHORSHIP
(
  IDAUTHOR NUMBER(6) NOT NULL REFERENCES AUTHOR,
  IDBOOK NUMBER(6) NOT NULL REFERENCES BOOK
);

CREATE TABLE BOOKINSTANCE
(
  BIID NUMBER(10) NOT NULL,
  BOOK NUMBER(6) NOT NULL REFERENCES BOOK
);

CREATE TABLE USER
(
  UID NUMBER(6) NOT NULL,
  UNAME VARCHAR2(20),
  BIRTH DATE
);

CREATE TABLE RATING
(
  RATE NUMBER(1) NOT NULL,
  RDATE DATE NOT NULL,
  IDRATER NUMBER(6) NOT NULL REFERENCES USER,
  IDBOOK NUMBER(6) NOT NULL REFERENCES BOOK
);

CREATE TABLE BORROWING
(
  BORROW DATE NOT NULL,
  RETURN DATE,
  IDLENDER NUMBER(6) NOT NULL REFERENCES USER,
  IDBOOK NUMBER(10) NOT NULL REFERENCES BOOKINSTANCE
);

CREATE OR REPLACE TRIGGER BORROWINGTRIGER
AFTER INSERT OR DELETE ON BORROWING
DECLARE
  max_dept NUMBER;
  min_dept NUMBER;
BEGIN
  select min(count(emp.empno)) into min_dept from emp right join dept on emp.deptno = dept.deptno group by dept.deptno;
  select max(count(emp.empno)) into max_dept from emp right join dept on emp.deptno = dept.deptno group by dept.deptno;
  IF (min_dept = 0 or max_dept > 10) THEN
    raise_application_error(-20000,'W departamencie musi pracowac pomiedzy 1 a 10 osobami');
  END IF;
END;
/

COMMIT;
